#include<iostream>
#include<string>
#include<cmath>
#include<vector>
using namespace std;
class node{
	public:
		int data;
		node*next;
};
void printlist(node*n){
	while(n!=NULL){
		cout<<n->data<<" ";
		n = n->next;
 	}
}
void push(node**head_ref,int new_data)
{
	node*new_node=new node();
	new_node->data = new_data;
	new_node->next = (*head_ref);
	(*head_ref) = new_node;
	cout<<new_data<<" ";
}
void insertAfter(node*prev_node,int new_data)
{
	if(prev_node == NULL){
		cout<<"the given previous node cannont be null";
	}
	node*new_node   = new node();
	new_node->data  = new_data;
	new_node->next  = prev_node->next;
	prev_node->next = new_node;
	
	
}
void append(node**head_ref,int new_data)
{
	node*new_node  = new node();
	node*last      = *head_ref;
	new_node->data = new_data;
	new_node->next = NULL;
	if(*head_ref== NULL){
		*head_ref = new_node;
		return ;
	} 
	while(last->next!=NULL){
		last = last->next;
	}
	last->next = new_node;
	return ;
}



int main(){
node*head = NULL;
node*seacond = NULL;
node*third = NULL;
node*new_node=NULL;


head     = new node();
seacond  = new node();
third    = new node();
new_node = new node(); 
push(&head,3);
push(&head,4);

head->data=1;
head->next=seacond;

seacond->data=2;
seacond->next=third;

insertAfter(seacond,10);

third->data=3;
third->next= new_node;

new_node->data=4;
new_node->next=NULL;

append(&new_node,5);

printlist(head);

	return 0; 
}